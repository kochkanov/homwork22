[{"C:\\Users\\Lenovo\\Desktop\\forms_01-starting-project-forms\\01-starting-project\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\forms_01-starting-project-forms\\01-starting-project\\src\\App.js":"2","C:\\Users\\Lenovo\\Desktop\\forms_01-starting-project-forms\\01-starting-project\\src\\components\\SimpleInput.js":"3","C:\\Users\\Lenovo\\Desktop\\forms_01-starting-project-forms\\01-starting-project\\src\\components\\BasicForm.js":"4","C:\\Users\\Lenovo\\Desktop\\forms_01-starting-project-forms\\01-starting-project\\src\\itils\\hooks\\useInput.js":"5"},{"size":142,"mtime":1616595887000,"results":"6","hashOfConfig":"7"},{"size":243,"mtime":1653998473313,"results":"8","hashOfConfig":"7"},{"size":6248,"mtime":1654002873035,"results":"9","hashOfConfig":"7"},{"size":3517,"mtime":1653922275199,"results":"10","hashOfConfig":"7"},{"size":1835,"mtime":1654005622995,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hgzjsf",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lenovo\\Desktop\\forms_01-starting-project-forms\\01-starting-project\\src\\index.js",[],"C:\\Users\\Lenovo\\Desktop\\forms_01-starting-project-forms\\01-starting-project\\src\\App.js",["24"],"import SimpleInput from './components/SimpleInput';\nimport BasicForm from './components/BasicForm';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      {/* <BasicForm/> */}\n      <SimpleInput />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Lenovo\\Desktop\\forms_01-starting-project-forms\\01-starting-project\\src\\components\\SimpleInput.js",[],"C:\\Users\\Lenovo\\Desktop\\forms_01-starting-project-forms\\01-starting-project\\src\\components\\BasicForm.js",["25"],"import { useEffect, useReducer} from \"react\";\n\nconst reducerName = (prevState, action) => {\n  if (action.type === \"NAME\") {\n    let Val = false;\n    if (action.value.trim() === \"\") {\n      Val = true;\n    } else {\n      Val = false;\n    }\n    return {\n      ...prevState,\n      name: action.value,\n      isValidName: Val,\n    };\n  }\n\n  if (action.type === \"LAST\") {\n    let valid = false;\n    if (action.value.trim() === \"\") {\n      valid = true;\n    } else {\n      valid = false;\n    }\n    return {\n      ...prevState,\n      lastName: action.value,\n      isValidLastName: valid,\n    };\n  }\n\n\n  if (action.type === \"EMAIL\") {\n    let valid3=false\n    if(!action.value.includes(\"@\")){\n      valid3=true\n    }else{\n      valid3=false\n    }\n    return {\n      ...prevState,\n      valueOfEmail: action.value,\n      isEmailValid: valid3\n    };\n  }\n\n  if(action.type===\"BTN\"){\n    return{\n      ...prevState,\n      button: action.value,\n\n    }\n  }\n  return prevState;\n\n\n};\n\nconst BasicForm = (props) => {\n  // const [formSubmit,setFormSubmit] = useState(false)\n  const [firstName, dispatchName] = useReducer(reducerName, {\n    name: \"\",\n    isValidName: false,\n    lastName: \"\",\n    isValidLastName: false,\n    valueOfEmail: \"\",\n      isEmailValid: false,\n      button:false,\n\n  });\n\n  const nameChangeHandler = (e) => {\n    dispatchName({\n      type: \"NAME\",\n      value: e.target.value,\n    });\n  };\n\n  const lastNameChangeHandler = (e) => {\n    dispatchName({\n      type: \"LAST\",\n      value: e.target.value,\n    });\n  };\n\n  const validateOfEmail = (e) => {\n    dispatchName({\n      type: \"EMAIL\",\n      value: e.target.value,\n   \n    });\n  };\n   useEffect(()=>{\n     if(!firstName.isValidName  && !firstName.isEmailValid && !firstName.isValidLastName && \n       firstName.name !== \"\" && firstName.lastName!== \"\" && firstName.valueOfEmail !== \"\"){\n       console.log('fg');\n       dispatchName({\n         type:\"BTN\", value: true\n       })\n     }else{\n       console.log('hi');\n      dispatchName({\n        type:\"BTN\", value: false\n      })\n\n     }\n   },[firstName.isValidName, firstName.isEmailValid, firstName.isValidLastName])\n  // let formIsValid = false;\n  // if (enteredNameIsValid && enteredEmailIsValid && enteredPasswordIsValid) {\n  //   formIsValid = true;\n  // }\n\n  let valid = firstName.isValidName ? \"form-control invalid\" : \"form-control\";\n  let valid2 = firstName.isValidLastName ? \"form-control invalid\" : \"form-control\";\n  let valid3 = firstName.isEmailValid ? \"form-control invalid\" : \"form-control\";\n  // let valid = firstName.isValidLastName\n  //   ? \"form-control invalid\"\n  //   : \"form-control\";\n\n  return (\n    <form>\n      <div className=\"control-group\">\n        <div className={valid}>\n          <label htmlFor=\"name\">First Name</label>\n          <input type=\"text\" id=\"name\" onChange={nameChangeHandler} value={firstName.name}/>\n          {/* {firstName.isValidName && <p>try again</p>} */}\n        </div>\n        <div className={valid2}>\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input type=\"text\" id=\"lastName\" onChange={lastNameChangeHandler} value={firstName.lastName}/>\n        </div>\n      </div>\n      <div className={valid3}>\n        <label htmlFor=\"email\">E-Mail Address</label>\n        <input type=\"text\" id=\"email\" onChange={validateOfEmail} value={firstName.valueOfEmail}/>\n      </div>\n      <div className=\"form-actions\">\n        <button type=\"submit\" disabled={!firstName.button}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","C:\\Users\\Lenovo\\Desktop\\forms_01-starting-project-forms\\01-starting-project\\src\\itils\\hooks\\useInput.js",[],{"ruleId":"26","severity":1,"message":"27","line":2,"column":8,"nodeType":"28","messageId":"29","endLine":2,"endColumn":17},{"ruleId":"30","severity":1,"message":"31","line":107,"column":6,"nodeType":"32","endLine":107,"endColumn":80,"suggestions":"33"},"no-unused-vars","'BasicForm' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'firstName.lastName', 'firstName.name', and 'firstName.valueOfEmail'. Either include them or remove the dependency array.","ArrayExpression",["34"],{"desc":"35","fix":"36"},"Update the dependencies array to be: [firstName.isValidName, firstName.isEmailValid, firstName.isValidLastName, firstName.name, firstName.lastName, firstName.valueOfEmail]",{"range":"37","text":"38"},[2050,2124],"[firstName.isValidName, firstName.isEmailValid, firstName.isValidLastName, firstName.name, firstName.lastName, firstName.valueOfEmail]"]